networks:
  zugnet:
    ipam:
      config:
        - subnet: 172.20.0.0/24
services:
  db:
    image: postgres:14-alpine
    container_name: peon.db
    environment:
      - POSTGRES_DB=durotar
      - POSTGRES_USER=gromhellscream
      - POSTGRES_PASSWORD=Zu88Zu88
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_INITDB_ARGS="--auth-host=md5"
    volumes:
      - $PWD/db:/var/lib/postgresql/data
      - /var/log/peon:/var/log/peon
    networks:
      zugnet:
        ipv4_address: 172.20.0.2
    restart: unless-stopped
    labels:
      com.peon.description: "Peon backend DB (PostgreSQL)"
  webapp:
    container_name: peon.ui
    image: umlatt/peon.ui:0.1.4-dev
    depends_on:
      - db
    ports:
      - '80:80'
    volumes:
      - /var/log/peon:/var/log/peon
    networks:
      zugnet:
        ipv4_address: 172.20.0.3
    restart: unless-stopped
  orchestrator:
    container_name: peon.orc
    image: umlatt/peon.orc:0.2.9-dev
    depends_on:
      - db
    ports:
      - '5000:5000'
    volumes:
      - /var/log/peon:/var/log/peon
      - $PWD/servers:/root/peon/servers
      - $PWD/plans:/root/peon/plans
      - $PWD/certs:/root/peon/certs
    networks:
      zugnet:
        ipv4_address: 172.20.0.4
    restart: unless-stopped
    privileged: true
  rest_api:
    container_name: peon.dev.api.docs
    image: swaggerapi/swagger-ui
    environment:
      - SWAGGER_JSON=/mnt/peon-api-v1.0.json
    depends_on:
      - orchestrator
    ports:
      - '8080:8080'
    volumes:
      - $PWD/documentation/api/1.0:/mnt
    networks:
      zugnet:
        ipv4_address: 172.20.0.5
    restart: unless-stopped